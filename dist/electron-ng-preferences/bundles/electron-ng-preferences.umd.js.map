{"version":3,"file":"electron-ng-preferences.umd.js.map","sources":["ng://electron-ng-preferences/lib/services/electron.service.ts","ng://electron-ng-preferences/lib/electron-ng-preferences.component.ts","ng://electron-ng-preferences/lib/services/validation.service.ts","ng://electron-ng-preferences/lib/main/group/fields/button.ts","ng://electron-ng-preferences/lib/main/group/fields/boolean.ts","ng://electron-ng-preferences/lib/main/group/fields/message.ts","ng://electron-ng-preferences/lib/main/group/fields/dropdown.ts","ng://electron-ng-preferences/lib/main/group/fields/radio.ts","ng://electron-ng-preferences/lib/main/group/fields/textbox.ts","ng://electron-ng-preferences/lib/main/group/fields/directory.ts","ng://electron-ng-preferences/lib/main/group/fields/checkbox.ts","node_modules/tslib/tslib.es6.js","ng://electron-ng-preferences/lib/main/group/validators/dynamic.validator.ts","ng://electron-ng-preferences/lib/main/group/group.component.ts","ng://electron-ng-preferences/lib/sidebar/sidebar.component.ts","ng://electron-ng-preferences/lib/main/main.component.ts","ng://electron-ng-preferences/lib/electron-ng-preferences.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { ipcRenderer, webFrame, remote } from 'electron';\r\nimport * as childProcess from 'child_process';\r\nimport * as fs from 'fs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ElectronService {\r\n  ipcRenderer: typeof ipcRenderer;\r\n  webFrame: typeof webFrame;\r\n  remote: typeof remote;\r\n  childProcess: typeof childProcess;\r\n  fs: typeof fs;\r\n\r\n  constructor() {\r\n    // Conditional imports\r\n    if (this.isElectron()) {\r\n      // @ts-ignore\r\n      this.ipcRenderer = window.require('electron').ipcRenderer;\r\n      // @ts-ignore\r\n      this.webFrame = window.require('electron').webFrame;\r\n      // @ts-ignore\r\n      this.remote = window.require('electron').remote;\r\n      // @ts-ignore\r\n      this.childProcess = window.require('child_process');\r\n      // @ts-ignore\r\n      this.fs = window.require('fs');\r\n    }\r\n  }\r\n\r\n  isElectron() {\r\n    // @ts-ignore\r\n    return window && window.process && window.process.type;\r\n  }\r\n\r\n  getOSLocale() {\r\n    if (this.isElectron() && this.remote && this.remote.app) {\r\n      return this.remote.app.getLocale();\r\n    }\r\n  }\r\n}\r\n","import { ElectronService } from './services/electron.service';\nimport { Section, PreferenceOptions } from './types/preference.types';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'electron-ng-preferences',\n  templateUrl: './electron-ng-preferences.component.html',\n  styleUrls: ['./electron-ng-preferences.component.scss']\n})\nexport class ElectronNgPreferencesComponent implements OnInit {\n  preferences: any;\n  options: PreferenceOptions;\n  defaults: any;\n  activeSection: Section;\n  constructor(private electronService: ElectronService) {\n    this.options = this.electronService.ipcRenderer.sendSync(\n      'getPreferenceOptions'\n    );\n    this.preferences = this.electronService.ipcRenderer.sendSync(\n      'getPreferences'\n    );\n    this.defaults = this.electronService.ipcRenderer.sendSync('getDefaults');\n\n    this.options.sections = this.options.sections.filter(\n      section => !section.enabled\n    );\n\n    this.options.sections.forEach(section => {\n      if (!this.preferences[section.name]) {\n        this.preferences[section.name] = {};\n      }\n    });\n\n    if (this.options.sections.length > 0) {\n      this.activeSection = this.options.sections[0];\n    }\n\n    console.log('electron-ng-preferences construct', this.options, this.preferences, this.defaults, this.activeSection);\n  }\n\n  ngOnInit() {\n    console.log('electron-ng-preferences init', this.options, this.preferences, this.defaults, this.activeSection);\n  }\n\n  sectionChanged(section: Section) {\n    this.activeSection = section;\n  }\n}\n","import { ElectronService } from './electron.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n// import rxIpc from 'rx-ipc-electron-six/lib/renderer'; // not working @todo find a better way\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n  rxIpc: any;\n  constructor(private electronService: ElectronService) {\n    this.rxIpc = (window as any).require(\n      'rx-ipc-electron-six/lib/renderer'\n    ).default;\n    console.log('ValidationService', this.rxIpc);\n  }\n\n  validateAsync(name: string, val: string): Observable<boolean> {\n    return this.rxIpc.runCommand('runObservableValidator', null, name, val);\n  }\n\n  actionAsync(name: string, form: any): Observable<any> {\n    return this.rxIpc.runCommand('runObservableAction', null, name, form);\n  }\n}\n","import { ValidationService } from './../../../services/validation.service';\r\nimport { ElectronService } from './../../../services/electron.service';\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'btnfield',\r\n  template: `\r\n    <div class=\"field field-button\">\r\n      <div class=\"btn\" (click)=\"runAction()\">\r\n        {{ field.label }}\r\n      </div>\r\n      <span class=\"message\" *ngIf=\"message\">{{ message }}</span>\r\n      <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n    </div>\r\n  `\r\n})\r\nexport class BtnFieldComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n\r\n  message: string;\r\n\r\n  constructor(\r\n    private electronService: ElectronService,\r\n    private validationService: ValidationService\r\n  ) {}\r\n\r\n  runAction() {\r\n    const actionName = this.field.action;\r\n    const lastLetter = actionName.substr(-1);\r\n    if (lastLetter === '$') {\r\n      this.validationService.actionAsync(actionName, this.form.value).subscribe(res => {\r\n        this.message = res;\r\n      });\r\n    } else {\r\n      this.message = this.electronService.ipcRenderer.sendSync(\r\n        'runAction',\r\n        actionName,\r\n        this.form.value\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { isBoolean } from 'util';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'boolean',\r\n  template: `\r\n    <div class=\"field field-boolean\">\r\n      <div class=\"field-label\">{{ field.label }}</div>\r\n      <ui-switch (change)=\"onChange($event)\"></ui-switch>\r\n      <span class=\"error-message\" *ngIf=\"control.errors?.required\"\r\n        >Please fill out this field.</span\r\n      ><span class=\"waiting-message\" *ngIf=\"control.status === 'PENDING'\">\r\n        Validating...\r\n      </span>\r\n      <span\r\n        class=\"error-message\"\r\n        *ngIf=\"control.errors?.dynamicError && field.errorMessage\"\r\n        >{{ field.errorMessage }}</span\r\n      >\r\n      <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n    </div>\r\n  `\r\n})\r\nexport class BooleanComponent implements OnInit {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n\r\n  get control() {\r\n    return this.form.controls[this.field.name];\r\n  }\r\n\r\n  get value() {\r\n    return this.form.controls[this.field.name].value;\r\n  }\r\n\r\n  set value(val) {\r\n    this.form.controls[this.field.name].setValue(val);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  onChange(val: boolean) {\r\n    this.value = val;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!isBoolean(this.value)) {\r\n      this.value = false;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'message',\r\n  template: `\r\n    <div class=\"field field-message\">\r\n      <div class=\"field-heading\" *ngIf=\"field.heading\">\r\n        {{ field.heading }}\r\n      </div>\r\n      <div class=\"field-content\" [innerHTML]=\"field.content\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class MessageComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'dropdown',\r\n  template: `\r\n    <div [formGroup]=\"form\">\r\n      <div class=\"field field-dropdown\">\r\n        <div class=\"field-label\">{{ field.label }}</div>\r\n        <select [id]=\"field.name\" [formControlName]=\"field.name\">\r\n          <option value=\"\">-- Select One --</option>\r\n          <option *ngFor=\"let opt of field.options\" [value]=\"opt.value\">{{\r\n            opt.label\r\n          }}</option>\r\n        </select>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.required\"\r\n          >Please fill out this field.</span\r\n        ><span class=\"waiting-message\" *ngIf=\"control.status === 'PENDING'\">\r\n        Validating...\r\n      </span>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.dynamicError && field.errorMessage\">{{\r\n          field.errorMessage\r\n        }}</span>\r\n        <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class DropDownComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n\r\n  get value() {\r\n    return this.form.controls[this.field.name].value;\r\n  }\r\n\r\n  get control() {\r\n    return this.form.controls[this.field.name];\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'radio',\r\n  template: `\r\n    <div [formGroup]=\"form\">\r\n      <div class=\"field field-radio\">\r\n        <div class=\"field-label\">{{ field.label }}</div>\r\n        <div class=\"radio-option\" *ngFor=\"let opt of field.options\">\r\n          <input\r\n            type=\"radio\"\r\n            id=\"{{ field.name }}\"\r\n            [value]=\"opt.value\"\r\n            [formControlName]=\"field.name\"\r\n          />\r\n          <label>{{ opt.label }}</label>\r\n        </div>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.required\"\r\n          >Please fill out this field.</span\r\n        ><span class=\"waiting-message\" *ngIf=\"control.status === 'PENDING'\">\r\n        Validating...\r\n      </span>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.dynamicError && field.errorMessage\">{{\r\n          field.errorMessage\r\n        }}</span>\r\n        <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class RadioComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n\r\n  get value() {\r\n    return this.form.controls[this.field.name].value;\r\n  }\r\n\r\n  get control() {\r\n    return this.form.controls[this.field.name];\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'textbox',\r\n  template: `\r\n    <div [formGroup]=\"form\">\r\n      <div class=\"field field-text\">\r\n        <div class=\"field-label\">{{ field.label }}</div>\r\n        <input\r\n          [attr.type]=\"field.type\"\r\n          class=\"form-control\"\r\n          [id]=\"field.name\"\r\n          [name]=\"field.name\"\r\n          [formControlName]=\"field.name\"\r\n        />\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.required\"\r\n          >Please fill out this field.</span\r\n        >\r\n        <span class=\"waiting-message\" *ngIf=\"control.status === 'PENDING'\">\r\n          Validating...\r\n        </span>\r\n        <span\r\n          class=\"error-message\"\r\n          *ngIf=\"control.errors?.dynamicError && field.errorMessage\"\r\n          >{{ field.errorMessage }}</span\r\n        >\r\n        <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class TextBoxComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n  get isValid() {\r\n    return this.form.controls[this.field.name].valid;\r\n  }\r\n  get isDirty() {\r\n    return this.form.controls[this.field.name].dirty;\r\n  }\r\n\r\n  get value() {\r\n    return this.form.controls[this.field.name].value;\r\n  }\r\n\r\n  get control() {\r\n    return this.form.controls[this.field.name];\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ElectronService } from '../../../services/electron.service';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'directory',\r\n  template: `\r\n    <div [formGroup]=\"form\">\r\n      <div class=\"field field-directory\">\r\n        <div class=\"field-label\">{{ field.label }}</div>\r\n        <div class=\"value\">Folder: {{ control?.value }}</div>\r\n        <div class=\"btn\" (click)=\"chooseFolder()\">\r\n          {{ btnLabel }}\r\n        </div>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.required\"\r\n          >Please fill out this field.</span\r\n        >\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.dynamicError && field.errorMessage\">{{\r\n          field.errorMessage\r\n        }}</span>\r\n        <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n        <input [formControlName]=\"field.name\" type=\"hidden\" />\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class DirectoryComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n\r\n  dialog: any;\r\n\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  // @Output()\r\n  // onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  selectedFolder: string;\r\n  btnLabel = 'Choose a Folder';\r\n\r\n  get isValid() {\r\n    return this.form.controls[this.field.name].valid;\r\n  }\r\n  get isDirty() {\r\n    return this.form.controls[this.field.name].dirty;\r\n  }\r\n\r\n  get value() {\r\n    return this.form.controls[this.field.name].value;\r\n  }\r\n\r\n  get control() {\r\n    return this.form.controls[this.field.name];\r\n  }\r\n\r\n  constructor(private electronService: ElectronService) {\r\n    this.dialog = this.electronService.remote.dialog;\r\n  }\r\n\r\n  chooseFolder() {\r\n    const value = this.dialog.showOpenDialog({ properties: ['openDirectory'] });\r\n    if (value) {\r\n      this.form.controls[this.field.name].setValue(value[0]);\r\n      // this.onChange.emit(value[0]);\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'checkbox',\r\n  template: `\r\n    <div [formGroup]=\"form\">\r\n      <div [formGroupName]=\"field.name\" class=\"field field-checkbox\">\r\n        <div class=\"field-label\">{{ field.label }}</div>\r\n        <div class=\"checkbox-option\" *ngFor=\"let opt of field.options\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"{{ field.name }}\"\r\n            [formControlName]=\"opt.label\"\r\n          />\r\n          <label>{{ opt.label }}</label>\r\n        </div>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.required\"\r\n          >Please fill out this field.</span\r\n        ><span class=\"waiting-message\" *ngIf=\"control.status === 'PENDING'\">\r\n        Validating...\r\n      </span>\r\n        <span class=\"error-message\" *ngIf=\"control.errors?.dynamicError && field.errorMessage\">{{\r\n          field.errorMessage\r\n        }}</span>\r\n        <span class=\"help\" *ngIf=\"field.help\">{{ field.help }}</span>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class CheckBoxComponent {\r\n  @Input() field: any = {};\r\n  @Input() form: FormGroup;\r\n  get isValid() {\r\n    return this.form.controls[this.field.name].valid;\r\n  }\r\n  get isDirty() {\r\n    return this.form.controls[this.field.name].dirty;\r\n  }\r\n\r\n  get value() {\r\n    return this.form.controls[this.field.name].value;\r\n  }\r\n  get control() {\r\n    return this.form.controls[this.field.name];\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ValidationService } from './../../../services/validation.service';\r\nimport { ElectronService } from './../../../services/electron.service';\r\nimport { ValidatorFn, AbstractControl, AsyncValidatorFn } from '@angular/forms';\r\nimport {\r\n  map,\r\n  catchError,\r\n  first,\r\n  take,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  switchMap,\r\n  tap\r\n} from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\n\r\nexport function dynamicValidatorFn(\r\n  electronService: ElectronService,\r\n  cdRef: ChangeDetectorRef,\r\n  validatorName: string\r\n): ValidatorFn {\r\n  return (control: AbstractControl) => {\r\n    console.log('dynamicalidatorFn', validatorName);\r\n    const value = control.value;\r\n    const result = electronService.ipcRenderer.sendSync(\r\n      'runValidator',\r\n      validatorName,\r\n      value\r\n    );\r\n    if (!result) {\r\n      cdRef.markForCheck();\r\n      return { dynamicError: true };\r\n    }\r\n    cdRef.markForCheck();\r\n    return null;\r\n  };\r\n}\r\n\r\nexport function dynamicAsyncValidatorFn(\r\n  validationService: ValidationService,\r\n  cdRef: ChangeDetectorRef,\r\n  validatorName: string\r\n): AsyncValidatorFn {\r\n  return (control: AbstractControl) => {\r\n    console.log('dynamicalidatorFn', validatorName);\r\n    /*\r\n    const value = control.value;\r\n    return validationService.validateAsync(validatorName, value).pipe(\r\n      map(\r\n        success => {\r\n          console.log('dynamicalidatorFn resulted', success);\r\n          if (!success) {\r\n            return { dynamicError: true };\r\n          }\r\n          return null;\r\n        },\r\n        e => {\r\n          return { dynamicError: true };\r\n        }\r\n      ),\r\n      catchError(() => null),\r\n      take(1)\r\n    );\r\n  };*/\r\n    if (!control.valueChanges) {\r\n      return of(null);\r\n    } else {\r\n      return control.valueChanges.pipe(\r\n        debounceTime(300),\r\n        distinctUntilChanged(),\r\n        take(1),\r\n        switchMap(value =>\r\n          validationService.validateAsync(validatorName, value)\r\n        ),\r\n        map(\r\n          success => {\r\n            console.log('dynamicalidatorFn resulted', success);\r\n            if (!success) {\r\n              return { dynamicError: true };\r\n            }\r\n            return null;\r\n          },\r\n          e => {\r\n            return { dynamicError: true };\r\n          }\r\n        ),\r\n        catchError(() => null),\r\n        tap(val => console.log('dynamicalidatorFn tapped', val)),\r\n        take(1),\r\n        tap(() => {\r\n          control.markAsTouched();\r\n          cdRef.markForCheck();\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { ValidationService } from './../../services/validation.service';\nimport { ElectronService } from './../../services/electron.service';\nimport { Group } from './../../types/preference.types';\nimport { Component, OnInit, Output, EventEmitter, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n  dynamicValidatorFn,\n  dynamicAsyncValidatorFn\n} from './validators/dynamic.validator';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GroupComponent implements OnInit {\n  @Input()\n  group: Group;\n\n  @Input()\n  preferences: any;\n\n  @Input()\n  form: FormGroup;\n\n  @Input()\n  validationOn: string;\n\n  // @Output()\n  // formChange: EventEmitter<FormGroup> = new EventEmitter<FormGroup>();\n\n  internalForm: FormGroup;\n\n  get fields() {\n    return this.group.fields;\n  }\n\n  constructor(\n    private electronService: ElectronService,\n    private validationService: ValidationService,\n    private cdRef: ChangeDetectorRef\n  ) {\n    cdRef.markForCheck();\n  }\n\n  ngOnInit() {\n    // const validatorOptions: any = {};\n    // if (this.validationOn) {\n    //   validatorOptions.updateOn = this.validationOn;\n    // }\n\n    console.log('group.component', this.group);\n    if (this.group && this.group.fields) {\n      const fieldsCtrls = {};\n      for (const f of this.group.fields) {\n        if (f.type === 'message') {\n          // do nothing\n          return;\n        } else if (f.type !== 'checkbox') {\n          const validators = [];\n          const asyncValidators = [];\n          if (f.required) {\n            validators.push(Validators.required);\n          }\n          if (f.validator) {\n            const lastLetter = f.validator.substr(-1);\n            if (lastLetter === '$') {\n              console.log('validator is observable', f.validator);\n              asyncValidators.push(\n                dynamicAsyncValidatorFn(this.validationService, this.cdRef, f.validator)\n              );\n            } else {\n              console.log('validator is normal', f.validator);\n              validators.push(\n                dynamicValidatorFn(this.electronService, this.cdRef, f.validator)\n              );\n            }\n          }\n\n          fieldsCtrls[f.name] = new FormControl(\n            this.preferences[f.name] || '',\n            validators,\n            asyncValidators\n          );\n        } else {\n          const opts = {};\n          for (const opt of f.options) {\n            opts[opt.label] = new FormControl(opt.value);\n          }\n          const formGroup = new FormGroup(opts);\n          if (this.preferences[f.name]) {\n            formGroup.setValue(this.preferences[f.name]);\n          }\n          fieldsCtrls[f.name] = formGroup;\n        }\n\n        this.form.addControl(f.name, fieldsCtrls[f.name]);\n      }\n\n      // this.internalForm = new FormGroup(fieldsCtrls);\n      // this.formChange.emit(this.form);\n    }\n\n    this.cdRef.markForCheck();\n  }\n}\n","import { Section, PreferenceOptions } from '../types/preference.types';\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  @Input()\n  activeSection: Section;\n  @Output()\n  sectionChange: EventEmitter<Section> = new EventEmitter<Section>();\n\n  @Input()\n  preferences: any;\n  @Input()\n  options: PreferenceOptions;\n  @Input()\n  defaults: any;\n\n  constructor() {}\n\n  ngOnInit() {\n    console.log(\n      'sidebar.component',\n      this.preferences,\n      this.options,\n      this.defaults,\n      this.activeSection\n    );\n  }\n\n  selectSection(section: Section) {\n    this.activeSection = section;\n    this.sectionChange.emit(section);\n  }\n\n  onSave() {\n    /*preferences[this.state.activeSection][key] = value;\n\n    this.setState({\n      preferences: preferences\n    });\n\n    ipcRenderer.send('setPreferences', preferences);*/\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PreferenceOptions, Section } from '../types/preference.types';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  @Input()\n  activeSection: Section;\n  @Input()\n  preferences: any;\n  @Input()\n  options: PreferenceOptions;\n  @Input()\n  defaults: any;\n\n  form: FormGroup;\n\n  get prefs() {\n    return this.preferences[this.activeSection.name];\n  }\n\n  get activeSectionForm() {\n    return this.form.get(this.activeSection.name);\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    console.log(\n      'main.component',\n      this.preferences,\n      this.options,\n      this.defaults,\n      this.activeSection\n    );\n\n    const validatorOptions: any = {};\n    if (this.options.validationOn) {\n      validatorOptions.updateOn = this.options.validationOn;\n    }\n\n    const formGroups = {};\n    this.options.sections.forEach(s => {\n      formGroups[s.name] = new FormGroup({}, validatorOptions);\n    });\n    this.form = new FormGroup(formGroups, validatorOptions);\n    console.log('main.ocmponent form is', this.form, validatorOptions);\n  }\n\n  save() {\n    console.log('save', this.form, this.form.value);\n    if (this.form.valid) {\n      console.log('form is valid');\n\n      const values = this.form.value;\n      /*values.map(v => {\n      return v;\n    });*/\n    } else if (this.form.pending) {\n      this.form.statusChanges.subscribe(status => {\n        console.log('statusChanges form was pending and now is', status);\n      });\n    }\n  }\n\n  onSubmit() {\n    console.log('onsubmit', this.form.valid, this.form, this.form.value);\n  }\n}\n","import { BtnFieldComponent } from './main/group/fields/button';\nimport { BooleanComponent } from './main/group/fields/boolean';\nimport { MessageComponent } from './main/group/fields/message';\nimport { ElectronService } from './services/electron.service';\nimport { DropDownComponent } from './main/group/fields/dropdown';\nimport { RadioComponent } from './main/group/fields/radio';\nimport { TextBoxComponent } from './main/group/fields/textbox';\nimport { DirectoryComponent } from './main/group/fields/directory';\nimport { CheckBoxComponent } from './main/group/fields/checkbox';\nimport { GroupComponent } from './main/group/group.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MainComponent } from './main/main.component';\nimport { NgModule } from '@angular/core';\nimport { ElectronNgPreferencesComponent } from './electron-ng-preferences.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiSwitchModule } from 'ngx-ui-switch';\nimport { ValidationService } from './services/validation.service';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    SidebarComponent,\n    GroupComponent,\n    CheckBoxComponent,\n    DirectoryComponent,\n    TextBoxComponent,\n    RadioComponent,\n    DropDownComponent,\n    MessageComponent,\n    BooleanComponent,\n    BtnFieldComponent,\n    ElectronNgPreferencesComponent\n  ],\n  providers: [ElectronService, ValidationService],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    UiSwitchModule\n  ],\n  exports: [ElectronNgPreferencesComponent]\n})\nexport class ElectronNgPreferencesModule {\n  constructor() {\n    library.add(fas);\n  }\n}\n"],"names":["Injectable","Component","Input","isBoolean","of","debounceTime","distinctUntilChanged","take","switchMap","map","catchError","tap","tslib_1.__values","Validators","FormControl","FormGroup","ChangeDetectionStrategy","ChangeDetectorRef","EventEmitter","Output","FormBuilder","library","fas","NgModule","CommonModule","ReactiveFormsModule","FontAwesomeModule","UiSwitchModule"],"mappings":"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"}
